<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://vsenver-vsenver.github.io</id>
    <title>vsenver</title>
    <updated>2020-11-10T15:08:37.853Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://vsenver-vsenver.github.io"/>
    <link rel="self" href="https://vsenver-vsenver.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://vsenver-vsenver.github.io/images/avatar.png</logo>
    <icon>https://vsenver-vsenver.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, vsenver</rights>
    <entry>
        <title type="html"><![CDATA[Linux 安装 composer]]></title>
        <id>https://vsenver-vsenver.github.io/post/linux-an-zhuang-composer/</id>
        <link href="https://vsenver-vsenver.github.io/post/linux-an-zhuang-composer/">
        </link>
        <updated>2020-10-28T16:09:01.000Z</updated>
        <content type="html"><![CDATA[<p>首先先下载composer.phar<br>
curl -sS https://getcomposer.org/installer | php</p>
<p>如果要让composer在任意目录下都可执行，将下载的composer.phar移动至/usr/local/bin，命名为composer即可</p>
<p>mv composer.phar /usr/local/bin/composer</p>
<p>如果需要国内镜像 配置国内镜像<br>
composer config -g repo.packagist composer https://packagist.phpcomposer.com</p>
<p>执行cpmposer -v 进行确认是否ok</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[宝塔面板安装PHP第三方扩展编译安装-swoole]]></title>
        <id>https://vsenver-vsenver.github.io/post/bao-ta-mian-ban-an-zhuang-php-di-san-fang-kuo-zhan-bian-yi-an-zhuang-swoole/</id>
        <link href="https://vsenver-vsenver.github.io/post/bao-ta-mian-ban-an-zhuang-php-di-san-fang-kuo-zhan-bian-yi-an-zhuang-swoole/">
        </link>
        <updated>2020-10-28T15:56:23.000Z</updated>
        <content type="html"><![CDATA[<p>1.下载swoole 源码，解压并进入源码文件夹<br>
2.执行phpize ，这里根据你需要使用的版本，我这里使用php7.2的版本<br>
/www/server/php/72/bin/phpize<br>
<img src="https://vsenver-vsenver.github.io/post-images/1603900714872.png" alt="" loading="lazy"></p>
<p>3.安装<br>
也是一样置顶php版本配置文件<br>
./configure --with-php-config=/www/server/php/72/bin/php-config</p>
<p><img src="https://vsenver-vsenver.github.io/post-images/1603900775643.png" alt="" loading="lazy"><br>
<img src="https://vsenver-vsenver.github.io/post-images/1603900796687.png" alt="" loading="lazy"></p>
<p>执行make 命令  make &amp;&amp; sudo make install</p>
<p>安装成功后 吧.sp 文件写到置顶php 版本的php.ini 中</p>
<p>echo &quot;extension = swoole.so&quot; &gt;&gt; /www/server/php/72/etc/php.ini</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Telegram 使用机器人发送通知]]></title>
        <id>https://vsenver-vsenver.github.io/post/telegram-chuang-jian-ji-qi-ren/</id>
        <link href="https://vsenver-vsenver.github.io/post/telegram-chuang-jian-ji-qi-ren/">
        </link>
        <updated>2020-10-26T07:09:55.000Z</updated>
        <content type="html"><![CDATA[<p>---如题，因为开发程序监控异常，邮件非常麻烦不方便，故而使用telegram机器人功能做故障消息提醒<br>
1.创建机器人<br>
<strong>在telegram的都是框中搜索 @BotFather</strong></p>
<figure data-type="image" tabindex="1"><img src="https://vsenver-vsenver.github.io/post-images/1603697670863.png" alt="" loading="lazy"></figure>
<p><strong>点击上图中的 /newbot ，会出现 Alright, a new bot. How are we going to call it? Please choose a name for your bot. 这个是让你给这个机器人起名字</strong><br>
<img src="https://vsenver-vsenver.github.io/post-images/1603697863688.png" alt="" loading="lazy"><br>
它说你非常聪明，尽然看得懂英文,再次输入机器人的 @username  以bot 结尾</p>
<figure data-type="image" tabindex="2"><img src="https://vsenver-vsenver.github.io/post-images/1603698010415.png" alt="" loading="lazy"></figure>
<p><strong>我图中的秘钥就是机器人做通知的机器上</strong></p>
<p>2.给这个机器人加入群组<br>
<img src="https://vsenver-vsenver.github.io/post-images/1603698384014.png" alt="" loading="lazy"></p>
<p>3.获取群组id</p>
<pre><code>在群组中@ 机器人
</code></pre>
<p><img src="https://vsenver-vsenver.github.io/post-images/1603698981026.png" alt="" loading="lazy"><br>
游览器访问  https://api.telegram.org/bot&lt;机器人秘钥&gt;/getUpdates<br>
带-号的就是群组id了<br>
4.拿到群组id 然后就可以忘这个群组发消息了<br>
{&quot;chat_id&quot;: &quot;-群组id&quot;,&quot;text&quot;: &quot;消息&quot;}<br>
https://api.telegram.org/bot&lt;机器人秘钥&gt;/sendMessage<br>
使用post 发送请求就可以在群组中接受到机器人的消息</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MAC PHP开发环境]]></title>
        <id>https://vsenver-vsenver.github.io/post/mac-php-kai-fa-huan-jing/</id>
        <link href="https://vsenver-vsenver.github.io/post/mac-php-kai-fa-huan-jing/">
        </link>
        <updated>2020-10-23T19:24:53.000Z</updated>
        <content type="html"><![CDATA[<p>123456</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MACBOOKPRO 13 2020 开箱]]></title>
        <id>https://vsenver-vsenver.github.io/post/macbookpro-13-2020-kai-xiang/</id>
        <link href="https://vsenver-vsenver.github.io/post/macbookpro-13-2020-kai-xiang/">
        </link>
        <updated>2020-10-23T19:16:34.000Z</updated>
        <content type="html"><![CDATA[<p>1234</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux 常用命令]]></title>
        <id>https://vsenver-vsenver.github.io/post/linux-chang-yong-ming-ling/</id>
        <link href="https://vsenver-vsenver.github.io/post/linux-chang-yong-ming-ling/">
        </link>
        <updated>2020-10-23T19:12:10.000Z</updated>
        <content type="html"><![CDATA[<p>centos 更改命令行和界面的模式</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Redis 中Hash数据类型操作]]></title>
        <id>https://vsenver-vsenver.github.io/post/redis-zhong-hash-shu-ju-lei-xing-cao-zuo/</id>
        <link href="https://vsenver-vsenver.github.io/post/redis-zhong-hash-shu-ju-lei-xing-cao-zuo/">
        </link>
        <updated>2020-08-25T14:51:59.000Z</updated>
        <content type="html"><![CDATA[<pre><code>/**
 *
 * Hash操作
 * 哈希操作
 * 可理解为数据库操作
 * 
 */

//为user表中的字段赋值。成功返回1，失败返回0。若user表不存在会先创建表再赋值，若字段已存在会覆盖旧值。
$redis-&gt;hSet('user', 'name', '222');

//获取user表中指定字段的值。若user表不存在则返回false。
$redis-&gt;hGet('user', 'realname');

//查看user表的某个字段是否存在，存在返回true，否则返回false。
$redis-&gt;hExists('user', 'realname');

//删除user表的一个字段，不支持删除多个字段。成功返回1，否则返回0。
$redis-&gt;hDel('user', '222');

//同时设置某个user表的多个字段值。成功返回true。
$redis-&gt;hMset('user', ['name' =&gt; 'jet', 'age' =&gt; 18]);

//同时获取某个user表的多个字段值。其中不存在的字段值为false。
$redis-&gt;hMget('user', ['name', 'age']);

//获取某个user表所有的字段和值。
$redis-&gt;hGetAll('user');

//获取某个user表所有字段名。user表不存在时返回空数组，key不为user表时返回false。
$redis-&gt;hKeys('user');

//获取某个user表所有字段值。
` $redis-&gt;hVals('user');  `

//为user表中不存在的字段赋值。若user表不存在则先创建，若字段已存在则不做任何操作。设置成功返回true，否则返回false。
$redis-&gt;hSetNx('user', 'realname', 'jetwu');

//获取某个user表的字段数量。若user表不存在返回0，若user不是hash表则返回false。
$redis-&gt;hLen('user');

//为user表中的指定字段加上指定的数值，若user表不存在则先创建，若字段不存在则先初始化值为0再进行操作，若字段值为字符串则返回false。设置成功返回字段新值。
$redis-&gt;hIncrBy('user', 'age', 10);

//为user表中的指定字段加上指定浮点数值。
$redis-&gt;hIncrBy('user', 'age', 1.5);

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IMAC 常用软件介绍]]></title>
        <id>https://vsenver-vsenver.github.io/post/imac-php-kai-fa-pei-zhi/</id>
        <link href="https://vsenver-vsenver.github.io/post/imac-php-kai-fa-pei-zhi/">
        </link>
        <updated>2020-08-15T14:28:24.000Z</updated>
        <content type="html"><![CDATA[<p><strong>1.SwitchHosts</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://vsenver-vsenver.github.io/post/hello-gridea/</id>
        <link href="https://vsenver-vsenver.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>